//
//  WeChatStepCounterUITests.swift
//  WeChatStepCounterUITests
//
//  Created by Yo on 2024/7/30.
//

import XCTest

class WeChatStepCounterUITests: XCTestCase {
    cookie
    let app = XCUIApplication(bundleIdentifier: "com.tencent.xin") // 微信的Bundle ID

    override func setUpWithError() throws {
        continueAfterFailure = false
        app.launch()
    }

    func testCollectStepCount() throws {
        // 等待微信加载完成
        let tabBar = app.tabBars["tabBar"]
        XCTAssert(tabBar.waitForExistence(timeout: 10))

        // 点击"发现"标签
        let discoverTab = tabBar.buttons["发现"]
        discoverTab.tap()

        // 等待并点击"微信运动"
        let weChatSportCell = app.tables.cells["微信运动"]
        XCTAssert(weChatSportCell.waitForExistence(timeout: 5))
        weChatSportCell.tap()

        // 等待排行榜加载
        let rankingList = app.tables.firstMatch
        XCTAssert(rankingList.waitForExistence(timeout: 5))

        var stepCounts: [String: Int] = [:]
        var previousCellCount = 0

        while true {
            let cells = rankingList.cells
            let currentCellCount = cells.count

            for i in 0..<currentCellCount {
                let cell = cells.element(boundBy: i)
                let nameElement = cell.staticTexts.element(boundBy: 0)
                let stepCountElement = cell.staticTexts.element(boundBy: 1)

                guard nameElement.exists && stepCountElement.exists else { continue }

                let name = nameElement.label
                let stepCountText = stepCountElement.label

                if let count = Int(stepCountText.replacingOccurrences(of: ",", with: "")) {
                    stepCounts[name] = count
                }
            }

            // 检查是否到达列表底部
            if currentCellCount == previousCellCount {
                break
            }

            previousCellCount = currentCellCount
            
            // 滑动到下一页
            let lastCell = cells.element(boundBy: currentCellCount - 1)
            lastCell.swipeUp()

            // 等待新内容加载
            sleep(1)
        }

        // 输出收集到的数据
        for (name, count) in stepCounts {
            print("\(name): \(count)")
        }
    }
}
